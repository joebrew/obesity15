{
    "contents" : "######\n# THIS SCRIPT READS IN OBESITY DATA,\n# CLEANS IT, AND SAVES IT TO AN RDATA FILE\n######\n\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(tidyr)\nlibrary(car)\nlibrary(RColorBrewer)\nlibrary(readxl)\n\n#####\n# DIRECTORIES\n#####\nset_directories <- function(){\n  if(Sys.info()['user'] == 'BrewJR'){\n    assign('private', 'E:/fdoh/private/obesity/data201415/', envir = .GlobalEnv)\n    assign('public', 'C:/Users/BrewJR/Documents/obesity15/', envir = .GlobalEnv)\n  } else if(Sys.info()['user'] == 'joebrew') {\n    assign('private', '/media/joebrew/JB/fdoh/private/obesity/data201415/', envir = .GlobalEnv)\n    assign('public', '/home/joebrew/Documents/obesity15/', envir = .GlobalEnv)\n  } else {\n    assign('private', '~/Desktop/', envir = .GlobalEnv) # CHANGE THIS LINE\n    assign('public', '/home/benmbrew/Documents/obesity15/', envir = .GlobalEnv)\n  }\n}\nset_directories()\n\n#####\n# READ IN DATA\n#####\nsetwd(private)\nif('temp.RData' %in% dir()){\n  load(paste0(private, 'temp.RData'))\n} else {\n  \n  \n  # Read in 2014 data\n  linkage <- read.csv(paste0(private, 'FDOH_Obesity_Linkage.csv'))\n  df <- read.csv(paste0(private, 'BMI.csv'))\n  names(df)[2] <- 'PersonID'\n  \n  # join together linkage with data\n  screen14 <- left_join(x = df,\n                        y = linkage[,c('PersonID', 'Homeroom_Teacher')])\n  \n  # Clean up column names\n  names(screen14) <- c('School_Name', 'PersonID', 'Grade',\n                       'Lunch_Status', 'Gender', 'Race', 'DOB',\n                       'Health_Screening_Date', 'Age_Months', 'Growth_Height', 'Growth_Weight',\n                       'BMI', 'BMI_Percentile', 'Teacher')\n  \n  screen14$DOB <- screen14$Teacher <- NULL\n  \n  ############################################\n  ######### Read in the old data\n  ############################################\n  setwd(paste0(private, 'screen'))\n  screen13 <- read_excel(\"screen2.xlsx\", sheet=7)\n  #Fix the column names of 2013 in order to match the previous years\n  colnames(screen13)[13] <- \"Lunch_Status\"\n  screen12 <- read_excel(\"screen2.xlsx\", sheet=6)\n  screen11 <- read_excel(\"screen2.xlsx\", sheet=5)\n  screen10 <- read_excel(\"screen2.xlsx\", sheet=4)\n  screen09 <- read_excel(\"screen2.xlsx\", sheet=3)\n  screen08 <- read_excel(\"screen2.xlsx\", sheet=2)\n  screen07 <- read_excel(\"screen2.xlsx\", sheet=1)\n  \n  ############################################\n  ######### Delete any student with multiple entries\n  ############################################\n  clean_up <- function(x){\n    x <- x[!duplicated(x),]\n    x <- x[,names(screen14)]\n  }\n  \n  screen14 <- clean_up(screen14)\n  screen13 <- clean_up(screen13)\n  screen12 <- clean_up(screen12)\n  screen11 <- clean_up(screen11)\n  screen10 <- clean_up(screen10)\n  screen09 <- clean_up(screen09)\n  screen08 <- clean_up(screen08)\n  screen07 <- clean_up(screen07)\n  \n  ############################################\n  ######### Make one master df\n  ############################################\n  screen <- as.data.frame(rbind(screen07,\n                                screen08,\n                                screen09,\n                                screen10,\n                                screen11,\n                                screen12,\n                                screen13,\n                                screen14))\n  \n  \n  screen$Race <- factor(screen$Race, levels=c(\"W\", \"B\", \"M\", \"H\", \"A\", \"I\"))\n  \n  \n  ############################################\n  ######### Fix missing decimals in screen$Growth_Height\n  ############################################\n  screen$Growth_Height <- as.numeric(screen$Growth_Height)\n  screen$Growth_Height <- ifelse(screen$Growth_Height > 100,\n                                 screen$Growth_Height/10,\n                                 screen$Growth_Height)\n  \n  ############################################\n  ######### Fix BMI\n  ############################################\n  screen$Growth_Weight <- as.numeric(screen$Growth_Weight)\n  screen$bmi <- screen$Growth_Weight / ((screen$Growth_Height)^2) * 703\n  \n  \n  ############################################\n  ######### Read in data to calculate percentile values\n  ############################################\n  setwd(public)\n  lms <- read.csv(\"lms.csv\")\n  lms <- lms[-c(1, 220),]\n  lms$Agemos <- as.numeric(as.character(lms$Agemos)) - 0.5\n  #convert all columns to numeric data\n  for (i in colnames(lms)){\n    lms[,which(colnames(lms) == i)] <-\n      as.numeric(as.character(lms[,which(colnames(lms) == i)]))}\n  #These data were downloaded on 6 February 2014 from \n  #http://www.cdc.gov/growthcharts/percentile_data_files.htm\n  #good article for calculating this: http://www.cdc.gov/nchs/data/nhsr/nhsr063.pdf \n  # i think the pdf has an error in the placement of the -1\n  #m = median \n  #s = generalized coefficient of variation\n  #l = power in the Box-Cox transformation\n  #z = z-score\n  #x = percentile\n  \n  ############################################\n  ######### Calculate percentile for age values\n  ############################################\n  \n  #boys\n  lms1 <- lms[which(lms$Sex == 1),]\n  #girls\n  lms2 <- lms[which(lms$Sex == 2),]\n  \n  #eliminate those older than 240 months\n  screen <- screen[which(screen$Age_Months <= 240),]\n  \n  screen$X <- screen$bmi\n  screen$id <- 1:nrow(screen)\n  screen$Z <- NA\n  \n  #boys\n  for (i in screen$id[which(screen$Gender == \"M\")]){\n    screen$Z[which(screen$id == i &\n                     screen$Gender == \"M\")] <-\n      (  (    screen$X[which(screen$id == i)] /\n                lms1$M[which(lms1$Agemos == screen$Age_Months[which(screen$id == i)])]) ^ (\n                  lms1$L[which(lms1$Agemos == screen$Age_Months[which(screen$id == i)])]  )-1) /\n      (lms1$L[which(lms1$Agemos==screen$Age_Months[which(screen$id == i)])]*\n         lms1$S[which(lms1$Agemos == screen$Age_Months[which(screen$id == i)])])}\n  \n  #girls\n  for (i in screen$id[which(screen$Gender == \"F\")]){\n    screen$Z[which(screen$id == i &\n                     screen$Gender == \"F\")] <-\n      (  (    screen$X[which(screen$id == i)] /\n                lms2$M[which(lms2$Agemos == screen$Age_Months[which(screen$id == i)])]) ^ (\n                  lms2$L[which(lms2$Agemos == screen$Age_Months[which(screen$id == i)])]  )-1) /\n      (lms2$L[which(lms2$Agemos==screen$Age_Months[which(screen$id == i)])]*\n         lms2$S[which(lms2$Agemos == screen$Age_Months[which(screen$id == i)])])}\n  \n  \n  #Remove extreme values using CDC's guidelines\n  #http://www.cdc.gov/pcd/issues/2009/jan/08_0007.htm\n  screen <- screen[which(is.infinite(screen$Z)== FALSE &\n                           screen$Z >= -4 &\n                           screen$Z <= 5 ),]\n  \n  \n  ##############################\n  # Make a normal/oveweight/obese column\n  #############################\n  screen$cat <- factor(ifelse(screen$Z < 1.036436, \n                              \"normal\",\n                              ifelse(screen$Z >=1.036436 & screen$Z <1.64485,\n                                     \"overweight\",\n                                     ifelse(screen$Z >=1.64485,\n                                            \"obese\",\n                                            NA))), levels=c(\"normal\", \"overweight\", \"obese\"))\n  ##############################\n  # Make a normal/oveweight (binary) column\n  #############################\n  screen$catbi <- factor(ifelse(screen$Z < 1.036436, \n                                \"normal\",\n                                ifelse(screen$Z >=1.036436,\n                                       \"overweight\",\n                                       NA)))\n  \n  # Get year\n  screen$Health_Screening_Date <- as.Date(screen$Health_Screening_Date)\n  screen$year <- as.numeric(format(screen$Health_Screening_Date, '%Y'))\n  screen$day_number <- as.numeric(format(screen$Health_Screening_Date, '%j'))\n  screen$year <- ifelse(screen$day_number <= 150, screen$year - 1, screen$year)\n  \n  # Fix grade\n  screen$Grade <- ifelse(screen$Grade %in% c('PK', 'KG'),\n                         as.character(screen$Grade),\n                         as.character(as.numeric(as.character(screen$Grade))))\n  \n  \n  \n  #####\n  # MANUALLY CLEAN SCHOOL NAMES\n  #####\n  screen$School_Name <- as.character(screen$School_Name)\n  screen$school <- ifelse(screen$School_Name %in%\n                            c('ALACHUA LEARNING CENTER ',\n                              'ALACHUA LEARNING CENTER ELEMENTARY',\n                              'ALACHUA LEARNING CENTER MIDDLE',\n                              'ALACHUA LEARNING CNR ELE'),\n                          'ALACHUA LEARNING CENTER',\n                          ifelse(screen$School_Name == 'CARING & SHARING LEARNIN',\n                                 'CARING & SHARING LEARNING',\n                                 ifelse(screen$School_Name == 'DUVAL, CHARLES W. ELEMEN',\n                                        'DUVAL, CHARLES W. ELEMENTARY',\n                                        ifelse(screen$School_Name == 'FORT CLARKE MIDDLE SCHOO',\n                                               'FORT CLARKE MIDDLE SCHOOL',\n                                               ifelse(screen$School_Name == 'FOSTER, STEPHEN ELEMENTA',\n                                                      'FOSTER, STEPHEN ELEMENTARY',\n                                                      ifelse(screen$School_Name == 'HIGH SPRINGS COMMUNITY S',\n                                                             'HIGH SPRINGS COMMUNITY SCHOOL',\n                                                             ifelse(screen$School_Name == 'LINCOLN, ABRAHAM MIDDLE ',\n                                                                    'LINCOLN, ABRAHAM MIDDLE SCHOOL',\n                                                                    ifelse(screen$School_Name == 'MEADOWBROOK ELEMENTARY S',\n                                                                           'MEADOWBROOK ELEMENTARY SCHOOL',\n                                                                           ifelse(screen$School_Name == 'MEBANE, A.L. MIDDLE SCHO',\n                                                                                  'MEBANE, A.L. MIDDLE SCHOOL',\n                                                                                  ifelse(screen$School_Name == 'METCALFE, W.A. ELEMENTAR',\n                                                                                         'METCALFE, W.A. ELEMENTARY',\n                                                                                         ifelse(screen$School_Name == 'MICANOPY AREA COOP SCHOO',\n                                                                                                'MICANOPY AREA COOP SCHOOL',\n                                                                                                ifelse(screen$School_Name == 'RAWLINGS, MARJORIE K. EL',\n                                                                                                       'RAWLINGS, MARJORIE K. ELEMENTARY',\n                                                                                                       ifelse(screen$School_Name == 'SHELL, CHESTER ELEMENTAR',\n                                                                                                              'SHELL, CHESTER ELEMENTARY',\n                                                                                                              ifelse(screen$School_Name == 'SWEETWATER BRANCH ELEMENTARY',\n                                                                                                                     'SWEETWATER BRANCH ACADEMY',\n                                                                                                                     ifelse(screen$School_Name == 'TALBOT, WILLIAM S. ELEME',\n                                                                                                                            'TALBOT, WILLIAM S. ELEMENTARY',\n                                                                                                                            ifelse(screen$School_Name == 'TERWILLIGER, MYRA ELEMEN',\n                                                                                                                                   'TERWILLIGER, MYRA ELEMENTARY',\n                                                                                                                                   ifelse(screen$School_Name == 'WILES, KIMBALL ELEMENTAR',\n                                                                                                                                          'WILES, KIMBALL ELEMENTARY',\n                                                                                                                                          ifelse(screen$School_Name == 'WILLIAMS, JOSEPH ELEMENT',\n                                                                                                                                                 'WILLIAMS, JOSEPH ELEMENTARY',\n                                                                                                                                                 screen$School_Name))))))))))))))))))\n  screen$School_Name <- NULL\n  \n  \n  #PER HIDAHIS FIGUEROA MESA'S FEB 7 2014 EMAIL\n  \n  #race key %%%%%%%%%%%%%%%%%%%%%%\n  #W White, Non Hispanic\n  #B Black, Non Hispanic\n  #H Hispanic\n  #A Asian or Pacific Islander\n  #I American Indian or Alaskan Native\n  #M Multiracial\n  screen$Race <- factor(screen$Race,\n                        levels=c(\"W\",\"I\",\"A\",  \"B\", \"H\", \"M\"),\n                        labels=c(\"White\",\n                                 \"Indian\",\n                                 \"Asian\",\n                                 \"Black\",\n                                 \"Hispanic\",\n                                 \"Multiracial\"))\n  \n  \n  #lunchStatus Key: %%%%%%%%%%%%%%%%%%%%%%%%%%%%\n  #1  Applied Not Eligible\n  #0  Did not apply\n  #2  Eligible for free lunch\n  #6\tEligible for free lunch/Direct Certified/Decline\n  #9\tEligible for free lunch/Direct Certified\n  #3\tEligible Reduced\n  #4\tEnrolled USDA approved Prov 2 school\n  #Z\tUnknown\n  \n  screen$lunch <- factor(Recode(screen$Lunch_Status,\n                                \"'1' = 'not_free';\n                                '0' = 'not_free';\n                                '2' = 'free';\n                                '6' = 'free';\n                                '9' = 'free';\n                                '3' = 'free'\"))\n  screen$Lunch_Status <- NULL\n  screen$lunch[which(screen$lunch == 'Z')] <- NA\n  screen$lunch <- factor(screen$lunch)\n  \n  #####\n  # 6. RECODE THE RACE VARIABLE INTO A BINARY\n  #    WHITE / NON-WHITE VARIABLE\n  #####\n  screen$race <- Recode(screen$Race,\n                        \"'W' = 'White';\n                        'B' =  'Black';\n                        'H' = 'Hispanic';\n                        'A' = 'Asian';\n                        'I' = 'Native Amer.'; \n                        'M' =  'Multiracial'\")\n  screen$race_bi <- factor(ifelse(screen$race == \"White\",\n                                  \"white\",\n                                  \"non_white\"))\n  screen$Race <- NULL\n  \n  \n  # Get percentile\n  screen$bmi_percentile <- pnorm(screen$Z) * 100\n  \n  # Get rid of 2015 data\n  screen <- screen[screen$year != 2015,]\n  \n  #####\n  # SAVE A CHECKPOINT\n  #####\n  save.image(paste0(private, 'temp.RData'))\n}\n\n\n\n#####\n# RESET DIRECTORIES (in case image was saved on other system)\n#####\nset_directories()\n",
    "created" : 1442000426068.000,
    "dirty" : false,
    "encoding" : "ISO8859-1",
    "folds" : "",
    "hash" : "183241971",
    "id" : "CD1902B",
    "lastKnownWriteTime" : 1442001324,
    "path" : "~/obesity15/read_in.R",
    "project_path" : "read_in.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "type" : "r_source"
}